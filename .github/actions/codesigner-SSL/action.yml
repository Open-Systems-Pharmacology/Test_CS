name: "CodeSigner SSL Composite Action"
description: "GitHub Composite Action for signing multiple code objects using SSL CodeSigner, iterating through a list of file paths separated by a pipe (|)."

inputs:
  file_paths:
    description: "Pipe-separated list of file paths to sign."
    required: true
  output_dir_path:
    description: "Directory where the signed code object will be written (leave empty if override is set to true)."
    required: false
  malware_block:
    description: "Scans your file for possible malware to prevent code compromise and prevents signing code if malware is detected."
    required: false
    default: "false"
  override:
    description: "Override the input file after signing if this argument is set to true and no output_dir_path argument was passed."
    required: false
    default: "true"
  clean_logs:
    description: "Clean log files after code signing operations."
    required: false
    default: "false"
  jvm_max_memory:
    description: "Maximum JVM heap size."
    required: false
    default: "1024M"
  signing_method:
    description: "Code signing method. Default is v1. Supported values: v1, v2."
    required: false
    default: "v1"
  ES_USERNAME:
    description: "SSL.com account username."
    required: true
  ES_PASSWORD:
    description: "SSL.com account password."
    required: true
  ES_CREDENTIAL_ID:
    description: "Credential ID for signing certificate."
    required: true
  ES_TOTP_SECRET:
    description: "OAuth TOTP Secret."
    required: true

runs:
  using: "composite"
  steps:
    - name: Parse file paths
      id: parse_files
      shell: bash
      run: |
        # Convert the pipe-separated file paths to an array
        IFS='|' read -r -a FILE_PATHS <<< "${{ inputs.file_paths }}"
        echo "Parsed ${#FILE_PATHS[@]} file(s) to sign."

    - name: Sign each artifact
      shell: bash
      run: |
        # Convert the pipe-separated file paths to an array
        IFS='|' read -r -a FILE_PATHS <<< "${{ inputs.file_paths }}"

        for FILE_PATH in "${FILE_PATHS[@]}"; do
          echo "Signing file: $FILE_PATH"
          sslcom/esigner-codesign@v1.3.1 \
            --command sign \
            --username "${{ inputs.ES_USERNAME }}" \
            --password "${{ inputs.ES_PASSWORD }}" \
            --credential_id "${{ inputs.ES_CREDENTIAL_ID }}" \
            --totp_secret "${{ inputs.ES_TOTP_SECRET }}" \
            --file_path "$FILE_PATH" \
            --output_path "${{ inputs.output_dir_path }}" \
            --malware_block "${{ inputs.malware_block }}" \
            --override "${{ inputs.override }}" \
            --clean_logs "${{ inputs.clean_logs }}" \
            --jvm_max_memory "${{ inputs.jvm_max_memory }}" \
            --signing_method "${{ inputs.signing_method }}"
        done